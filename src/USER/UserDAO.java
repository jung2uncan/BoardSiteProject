package USER;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;

public class UserDAO {
	private Connection conn;
	private PreparedStatement pstat;
	private ResultSet rs;
	
	//생성자는 인스턴스를 생성할 때 자동으로 실행되는 부분
	public UserDAO() throws IOException {
		String filePath = "D:/XXXXXX/eclipse-workspace/BoardSite/config/db.properties"; 
		Properties properties = new Properties();

		try {
			properties.load(new FileReader(filePath));
			Class.forName(properties.getProperty("driver"));	 //MySQL에 접속할 수 있도록 하는 매개체(라이브러리)
			conn = DriverManager.getConnection(properties.getProperty("dbURL"), properties.getProperty("dbID"), properties.getProperty("dbPW")); //매개변수를 통해 DB에 접속할 수 있도록 함. 접속이 완료되면 conn객체에 접속정보가 담기게 됨.
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public int login(String userID, String userPW) {
		String SQL = "SELECT userPW FROM USER WHERE userID = ?";
		
		try {
			pstat = conn.prepareStatement(SQL);
			pstat.setString(1, userID);
			rs = pstat.executeQuery();	//쿼리 실행 결과는 담는 변수
			
			if(rs.next()) {	//쿼리 실행 결과 데이터가 존재하면 해당 영역이 실행
				if(rs.getString(1).equals(userPW)) {
					return 1;   //로그인 성공
				}
				else
					return 0;	//로그인 실패(비밀번호 불일치)
			} 
			
			return -1;	//ID가 없음
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return -2; //-2는 데이터베이스 오류를 의미함.
	}
	
	public int join(User user) {
		String SQL ="INSERT INTO USER VALUES (?, ?, ?, ?, ?)";
		
		try {
			pstat = conn.prepareStatement(SQL);
			pstat.setString(1, user.getUserID());
			pstat.setString(2, user.getUserPW());
			pstat.setString(3, user.getUserName());
			pstat.setString(4, user.getUserGender());
			pstat.setString(5, user.getUserEmail());
			
			//INSERT문의 경우, 성공일 경우 0 이상의 숫자가 반환됨.
			return pstat.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return -1;	//데이터 베이스 오류일 때
	}
}